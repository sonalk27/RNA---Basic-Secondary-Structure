def isRNABaseComplementary(baseOne,baseTwo):
    """Returns true if the 2 RNA bases are complementary."""
	compBases = [["A", "U"], ["C","G"], ["G", "U"]]
	for row in compBases:
	if (baseOne==compBases[row][0] and baseTwo==compBases[row][1]) or (baseOne==compBases[row][1] and baseTwo==compBases[row][0]):
        return True
    else:
        return False
def fold( RNASequence )->int:
	STEP, ELEMENT = 0, 1
	call_stack =[(STEP, n)]
	return_stack=[]
	while call_stack:
		action, data = call_stack.pop()
		if action == STEP:
			n = data
			if len(RNASequence)<2:
				return 0
			else
				call_stack.append((ELEMENT, None))
				call_stack.append((STEP, n - 2))
				call_stack.append((STEP, n - 1))
		else:
			x = return_stack.pop()
			y = return_stack.pop()
			if isRNABaseComplementary(x,y):
                score=score+1
                if score>bestSoFar:
                    bestSoFar=score
			return_stack.append(x + y)
	return return_stack[-1]
bestscore_memo = {}
def bestScore(k):
if k < 2: return 1
if k not in bestscore_memo:
bestscore_memo[k] = k * bestScore(k-1)
return bestscore_memo[k]
